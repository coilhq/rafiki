on:
  push:
    branches:
    - '!main'
  pull_request:
    types:
      - opened
      - synchronize

name: PR Checks

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.20.0'
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.9.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

  backend:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: ./.github/workflows/rafiki/env-setup@v1
      - run: pnpm --filter openapi build
      - run: pnpm --filter backend test

  frontend:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.9.0
          run_install: true
      - run: pnpm --filter frontend lint
      - run: pnpm --filter frontend format:check
      - run: pnpm --filter frontend test

  rates:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.9.0
          run_install: true
      - run: pnpm --filter rates lint
      - run: pnpm --filter rates format:check
      - run: pnpm --filter rates test

  auth:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.9.0
          run_install: true
      - run: pnpm --filter auth lint
      - run: pnpm --filter auth format:check
      - run: pnpm --filter openapi build
      - run: pnpm --filter auth test

  openapi:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.9.0
          run_install: true
      - run: pnpm --filter openapi lint
      - run: pnpm --filter openapi format:check
      - run: pnpm --filter openapi test

  build:
    runs-on: ubuntu-latest
    needs:
      - backend
      - frontend
      - rates
      - auth
      - openapi
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.9.0
          run_install: true
      - run: pnpm build

  all_pr_checks_passed:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - run: echo 'PR Checks Passed'

