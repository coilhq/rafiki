type Query {
  user: User
}

type User {
  id: ID!
  balance: Amount!
  account: Account!
  """
  invoices
  @param after Returns the elements in the list that come after the specified cursor.
  @param before Returns the elements in the list that come before the specified cursor.
  @param first Returns the first _n_ elements from the list.
  @param last Returns the last _n_ elements from the list.
  """
  invoices(
    after: String
    before: String
    first: Int
    last: Int
  ): InvoiceConnection
}

type Amount {
  amount: Int!
  currency: String!
  scale: Int
}

type Account {
  id: ID!
  balance: Amount!
}

type InvoiceConnection {
  pageInfo: PageInfo!
  edges: [InvoiceEdge]!
}

type PageInfo {
  """
  Paginating forwards: the cursor to continue.
  """
  endCursor: String
  """
  Paginating forwards: Are the more pages?
  """
  hasNextPage: Boolean!
  """
  Paginating backwards: Are the more pages?
  """
  hasPreviousPage: Boolean!
  """
  Paginating backwards: the cursor to continue.
  """
  startCursor: String
}

type InvoiceEdge {
  node: Invoice!
  cursor: String!
}

type Invoice {
  id: ID!
  receivedAmount: Amount!
  maximumAmount: Amount
  active: Boolean!
  createdAt: String!
  expiresAt: String
  description: String
  totalAmount: String!
}
