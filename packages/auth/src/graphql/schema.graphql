type Query {
  "Fetch a paginated list of grants."
  grants(
    "Forward pagination: Fetch grants after this cursor."
    after: String
    "Backward pagination: Fetch grants before this cursor."
    before: String
    "Forward pagination: Fetch the first **n** grants from the page."
    first: Int
    "Backward pagination: Fetch the last **n** grants from the page."
    last: Int
    "Filter grants based on specified criteria."
    filter: GrantFilter
    "Sort grants by their creation date in ascending or descending order."
    sortOrder: SortOrder
  ): GrantsConnection!

  "Fetch a specific grant by its ID."
  grant(id: ID!): Grant!
}

type Mutation {
  "Revoke an existing grant."
  revokeGrant(input: RevokeGrantInput!): RevokeGrantMutationResponse!
}

type PageInfo {
  "Cursor for fetching the next set of results when paginating forward."
  endCursor: String
  "Indicates if there are more pages when paginating forward."
  hasNextPage: Boolean!
  "Indicates if there are more pages when paginating backward."
  hasPreviousPage: Boolean!
  "Cursor for fetching the next set of results when paginating backward."
  startCursor: String
}

type GrantsConnection {
  "Pagination information for grants."
  pageInfo: PageInfo!
  "List of grant edges containing the grant node and its cursor."
  edges: [GrantEdge!]!
}

type GrantEdge {
  "The grant object."
  node: Grant!
  "The cursor for this grant."
  cursor: String!
}

input GrantFilter {
  "Filter grants by their unique identifier."
  identifier: FilterString
  "Filter grants by their state."
  state: FilterGrantState
  "Filter grants by their finalization reason."
  finalizationReason: FilterFinalizationReason
}

input FilterString {
  "List of identifiers to include in the filter."
  in: [String!]
}

input FilterGrantState {
  "List of states to include in the filter."
  in: [GrantState!]
  "List of states to exclude in the filter."
  notIn: [GrantState!]
}

input FilterFinalizationReason {
  "List of finalization reasons to include in the filter."
  in: [GrantFinalization!]
  "List of finalization reasons to exclude in the filter."
  notIn: [GrantFinalization!]
}

input RevokeGrantInput {
  "ID of the grant to revoke."
  grantId: String!
}

interface Model {
  "Unique identifier for the model."
  id: ID!
  "The date and time when the model was created."
  createdAt: String!
}

type Grant implements Model {
  "Unique identifier of the grant."
  id: ID!
  "Wallet address of the grantee's account."
  client: String!
  "Details of the access provided by the grant."
  access: [Access!]!
  "Current state of the grant."
  state: GrantState!
  "Reason why the grant was finalized."
  finalizationReason: GrantFinalization
  "The date and time when the grant was created."
  createdAt: String!
}

type Access implements Model {
  "Unique identifier of the access object."
  id: ID!
  "Wallet address of the sub-resource (incoming payment, outgoing payment, or quote)."
  identifier: String
  "Type of access (incoming payment, outgoing payment, or quote)."
  type: String!
  "Actions allowed with this access (create, read, list, or complete)."
  actions: [String]!
  "Limits for payment associated with this access."
  limits: LimitData
  "The date and time when the access was created."
  createdAt: String!
}

type LimitData {
  "Wallet address URL of the receiver."
  receiver: String
  "Amount to debit."
  debitAmount: PaymentAmount
  "Amount to receive."
  receiveAmount: PaymentAmount
  "Interval between payments."
  interval: String
}

type PaymentAmount {
  "The value of the payment amount."
  value: UInt64!
  "[ISO 4217 currency code](https://en.wikipedia.org/wiki/ISO_4217), e.g. `USD`."
  assetCode: String!
  "Difference in orders of magnitude between the standard unit of an asset and a corresponding fractional unit."
  assetScale: UInt8!
}

type RevokeGrantMutationResponse {
  "ID of the revoked grant."
  id: ID!
}

enum GrantState {
  "The grant request is processing."
  PROCESSING
  "The grant request is awaiting interaction."
  PENDING
  "The grant request has been approved."
  APPROVED
  "The grant request has been finalized, and no more access tokens or interactions can be made."
  FINALIZED
}

enum GrantFinalization {
  "The grant was issued successfully."
  ISSUED
  "The grant was revoked."
  REVOKED
  "The grant request was rejected."
  REJECTED
}

enum SortOrder {
  "Sort the results in ascending order."
  ASC
  "Sort the results in descending order."
  DESC
}

scalar UInt8
scalar UInt64
