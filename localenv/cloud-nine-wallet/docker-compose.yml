name: c9
services:
  cloud-nine-mock-ase:
    hostname: cloud-nine-wallet
    image: rafiki-mock-ase
    build:
      context: ../..
      dockerfile: ./localenv/mock-account-servicing-entity/Dockerfile
    restart: always
    networks:
      - rafiki
    ports:
      - '3030:80'
    environment:
      LOG_LEVEL: debug
      PORT: 80
      SEED_FILE_LOCATION: /workspace/seed.yml
      KEY_FILE: /workspace/private-key.pem
      OPEN_PAYMENTS_URL: ${CLOUD_NINE_OPEN_PAYMENTS_URL:-https://cloud-nine-wallet-backend}
      AUTH_SERVER_DOMAIN: ${CLOUD_NINE_AUTH_SERVER_DOMAIN:-http://localhost:3006}
      TESTNET_AUTOPEER_URL: ${TESTNET_AUTOPEER_URL}
      GRAPHQL_URL: http://cloud-nine-wallet-backend:3001/graphql
      SIGNATURE_VERSION: 1
      SIGNATURE_SECRET: iyIgCprjb9uL8wFckR+pLEkJWMB7FJhgkvqhTQR/964=
      IDP_SECRET: 2pEcn2kkCclbOHQiGNEwhJ0rucATZhrA807HTm2rNXE=
      DISPLAY_NAME: Cloud Nine Wallet
      DISPLAY_ICON: wallet-icon.svg
    volumes:
      - ../cloud-nine-wallet/seed.yml:/workspace/seed.yml
      - ../cloud-nine-wallet/private-key.pem:/workspace/private-key.pem
    depends_on:
      - cloud-nine-backend
  cloud-nine-backend:
    hostname: cloud-nine-wallet-backend
    image: rafiki-backend
    build:
      context: ../..
      dockerfile: ./packages/backend/Dockerfile.dev
    volumes:
      - type: bind
        source: ../../packages/backend/src
        target: /home/rafiki/packages/backend/src
        read_only: true
    restart: always
    privileged: true
    ports:
      - '3000:80'
      - '3001:3001'
      - '3002:3002'
      - "9229:9229"
    networks:
      - rafiki
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      INSTANCE_NAME: CLOUD-NINE
      TRUST_PROXY: ${TRUST_PROXY}
      LOG_LEVEL: debug
      ADMIN_PORT: 3001
      CONNECTOR_PORT: 3002
      OPEN_PAYMENTS_PORT: 80
      DATABASE_URL: postgresql://cloud_nine_wallet_backend:cloud_nine_wallet_backend@shared-database/cloud_nine_wallet_backend
      USE_TIGERBEETLE: ${USE_TIGERBEETLE-false}
      TIGERBEETLE_CLUSTER_ID: ${TIGERBEETLE_CLUSTER_ID-0}
      TIGERBEETLE_REPLICA_ADDRESSES: ${TIGERBEETLE_REPLICA_ADDRESSES-''}
      AUTH_SERVER_GRANT_URL: ${CLOUD_NINE_AUTH_SERVER_DOMAIN:-http://cloud-nine-wallet-auth:3006}
      AUTH_SERVER_INTROSPECTION_URL: http://cloud-nine-wallet-auth:3007
      ILP_ADDRESS: ${ILP_ADDRESS:-test.cloud-nine-wallet}
      STREAM_SECRET: BjPXtnd00G2mRQwP/8ZpwyZASOch5sUXT5o0iR5b5wU=
      API_SECRET: iyIgCprjb9uL8wFckR+pLEkJWMB7FJhgkvqhTQR/964=
      OPEN_PAYMENTS_URL: ${CLOUD_NINE_OPEN_PAYMENTS_URL:-http://cloud-nine-wallet-backend}
      WEBHOOK_URL: http://cloud-nine-wallet/webhooks
      EXCHANGE_RATES_URL: http://cloud-nine-wallet/rates
      REDIS_URL: redis://shared-redis:6379/0
      WALLET_ADDRESS_URL: ${CLOUD_NINE_WALLET_ADDRESS_URL:-https://cloud-nine-wallet-backend/.well-known/pay}
      ILP_CONNECTOR_ADDRESS: ${CLOUD_NINE_CONNECTOR_URL}
      ENABLE_TELEMETRY: false
    depends_on:
      - shared-database
      - shared-redis
  cloud-nine-auth:
    hostname: cloud-nine-wallet-auth
    image: rafiki-auth
    build:
      context: ../..
      dockerfile: ./packages/auth/Dockerfile.dev
    volumes:
      - type: bind
        source: ../../packages/auth/src
        target: /home/rafiki/packages/auth/src
        read_only: true
    restart: always
    networks:
      - rafiki
    ports:
      - '3003:3003'
      - '3006:3006'
      - "9230:9229"
      - '3009:3009'
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      TRUST_PROXY: ${TRUST_PROXY}
      AUTH_DATABASE_URL: postgresql://cloud_nine_wallet_auth:cloud_nine_wallet_auth@shared-database/cloud_nine_wallet_auth
      AUTH_SERVER_URL: ${CLOUD_NINE_AUTH_SERVER_DOMAIN:-http://localhost:3006}
      REDIS_URL: redis://shared-redis:6379/1
      IDENTITY_SERVER_URL: http://localhost:3030/mock-idp/
      IDENTITY_SERVER_SECRET: 2pEcn2kkCclbOHQiGNEwhJ0rucATZhrA807HTm2rNXE=
      COOKIE_KEY: 42397d1f371dd4b8b7d0308a689a57c882effd4ea909d792302542af47e2cd37
      ADMIN_API_SECRET: rPoZpe9tVyBNCigm05QDco7WLcYa0xMao7lO5KG1XG4=
    depends_on:
      - shared-database
      - shared-redis
  shared-database:
    image: 'postgres:15' # use latest official postgres version
    restart: unless-stopped
    networks:
      - rafiki
    volumes:
      - database-data:/var/lib/postgresql/data/ # persist data even if container shuts down
      - ../cloud-nine-wallet/dbinit.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
  shared-redis:
    image: 'redis:7'
    restart: unless-stopped
    networks:
      - rafiki
  cloud-nine-admin:
    hostname: cloud-nine-wallet-admin
    image: rafiki-frontend
    build:
      context: ../..
      dockerfile: ./packages/frontend/Dockerfile.dev
    volumes:
      - type: bind
        source: ../../packages/frontend/app
        target: /home/rafiki/packages/frontend/app
        read_only: true
    restart: always
    networks:
      - rafiki
    ports:
      - '3010:3010'
    environment:
      PORT: 3010
      LOG_LEVEL: debug
      NODE_ENV: ${NODE_ENV:-development}
      GRAPHQL_URL: http://cloud-nine-wallet-backend:3001/graphql
      OPEN_PAYMENTS_URL: https://cloud-nine-wallet-backend/
      ENABLE_INSECURE_MESSAGE_COOKIE: true
      KRATOS_CONTAINER_PULIC_URL: 'http://cloud-nine-kratos:4433'
      KRATOS_BROWSER_PUBLIC_URL: 'http://localhost:4433'
      KRATOS_ADMIN_URL: 'http://cloud-nine-kratos:4434/admin'
      SIGNATURE_VERSION: 1
      SIGNATURE_SECRET: iyIgCprjb9uL8wFckR+pLEkJWMB7FJhgkvqhTQR/964=
    depends_on:
      - cloud-nine-backend
      - cloud-nine-kratos
  cloud-nine-kratos:
    build:
      context: ../..
      dockerfile: ./packages/frontend/kratos/Dockerfile
      args:
        PATH_TO_KRATOS_CONFIG: ./localenv/cloud-nine-wallet/kratos.yml
    depends_on:
      - shared-database
      - mailslurper
    environment:
      DEV_MODE: true
    ports:
      - "4433:4433"
    networks:
      - rafiki
  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - "4436:4436"
      - "4437:4437"
    networks:
      - rafiki

volumes:
  database-data: # named volumes can be managed easier using docker-compose
