meta {
  name: Create Asset
  type: graphql
  seq: 1
}

post {
  url: {{RafikiGraphqlHost}}/graphql
  body: graphql
  auth: none
}

body:graphql {
  mutation CreateAsset($input: CreateAssetInput!) {
    createAsset(input: $input) {
      asset {
        code
        createdAt
        id
        scale
        withdrawalThreshold
        liquidityThreshold
      }
      code
      message
      success
    }
  }
}

body:graphql:vars {
  {
    "input": {
      "code": "USD",
      "scale": 6,
      "withdrawalThreshold": null,
      "liquidityThreshold": "100000000"
    }
  }
}

script:pre-request {
  const { createHmac } = require('crypto');
  const { canonicalize } = require('json-canonicalize');
  const { print } = require('graphql/language/printer')
  
  const body = req.getBody();
  const { query, variables, operationName } = body;
  
  //console.log(body);
  
  const formattedBody = {
    variables,
    query: print(query),
    operationName
  };
  
  const timestamp = Math.round(new Date().getTime() / 1000);
  const version = bru.getEnvVar('apiSignatureVersion');
  const payload = `${timestamp}.${canonicalize(formattedBody)}`;
  const hmac = createHmac('sha256', bru.getEnvVar('apiSignatureSecret'));
  hmac.update(payload)
  const digest = hmac.digest('hex')
  
  req.setHeader('signature', `t=${timestamp}, v${version}=${digest}`)
}

script:post-response {
  const body = res.getBody();
  
  bru.setEnvVar("assetId", body.data.createAsset.asset?.id);
}
