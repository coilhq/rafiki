meta {
  name: Create Quote
  type: http
  seq: 1
}

post {
  url: {{senderOpenPaymentsHost}}/quotes
  body: json
  auth: none
}

headers {
  Authorization: GNAP {{accessToken}}
}

body:json {
  {
      "receiver": "{{receiverOpenPaymentsHost}}/incoming-payments/{{incomingPaymentId}}",
      "walletAddress": "{{senderWalletAddress}}",
      "debitAmount": {
          "value": "1000",
          "assetCode": "{{receiverAssetCode}}",
          "assetScale": {{receiverAssetScale}}
      },
      "method": "ilp"
  }
}

script:pre-request {
  const scripts = require('./scripts');
  
  scripts.addHostHeader();
  
  await scripts.addSignatureHeaders();
}

script:post-response {
  const body = res.getBody();
  bru.setEnvVar("quoteId", body.id.split("/").pop());
  bru.setEnvVar("quoteDebitAmount", JSON.stringify(body.debitAmount))
  bru.setEnvVar("quoteReceiveAmount", JSON.stringify(body.receiveAmount))
  
}

tests {
  test("Status code is 201", function() {
    expect(res.getStatus()).to.equal(201);
  });
}
