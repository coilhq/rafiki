meta {
  name: Create Outgoing Payment 3
  type: http
  seq: 11
}

post {
  url: {{senderOpenPaymentsHost}}/outgoing-payments
  body: json
  auth: none
}

headers {
  Authorization: GNAP {{accessToken}}
}

body:json {
  {
    "walletAddress": "{{senderWalletAddress}}",
    "incomingPayment": "{{receiverOpenPaymentsHost}}/incoming-payments/{{incomingPaymentId}}",
    "debitAmount": {
      "value": "300",
      "assetCode": "USD",
      "assetScale": 2
    },
    "metadata": {
      "description": "Free Money!"
    }
  }
  
}

script:pre-request {
  const scripts = require('./scripts');
  
  scripts.addHostHeader();
  
  await scripts.addSignatureHeaders();
}

script:post-response {
  const body = res.getBody();
  bru.setEnvVar("outgoingPaymentId", body.id.split("/").pop());
  
}

tests {
  test("Status code is 201", function() {
    expect(res.getStatus()).to.equal(201);
  });
}
