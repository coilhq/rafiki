{
	"info": {
		"_postman_id": "684e49e7-a548-4674-a7b9-7e28c37678d9",
		"name": "Interledger",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "23065173-684e49e7-a548-4674-a7b9-7e28c37678d9"
	},
	"item": [
		{
			"name": "Rafiki Admin APIs",
			"item": [
				{
					"name": "Create Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7d5286b-1e98-4ab4-be9f-37d2420bfe5f",
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"assetId\", body.data.createAsset.asset.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "15e3f0ab-19b2-460e-816f-e13b3a773d4d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e74f9e30-9cf7-45d9-9209-e22d464ef8fb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "64cd962b-c1ae-452a-b583-bb468389ea3e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset",
					"id": "30bb8487-d37d-4b1d-b1d5-c18eacbab342",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Assets",
					"id": "4b9bf54f-7d4a-42c9-b418-12495c77ae23",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Asset Liquidity",
					"id": "7c4904ae-027d-4bd7-bce7-8b94750ee6ea",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Asset Liquidity",
					"id": "c203cd7f-5d9a-40f5-8589-151428fbf550",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Fee",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0cf3f928-778b-4a7b-b153-1d5f2aaca342",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9c23475d-0e7c-4464-9822-9f9e88fc0610",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Peer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "83550062-dc45-48d1-8b87-ed25a5e03990",
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"peerId\", body.data.createPeer.peer.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4891bdad-2d75-4e0a-8c08-df070dfdd1f1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Or Update Peer By Url",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1656a8d-7839-49ae-80df-6485ddda2208",
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"peerId\", body.data.createOrUpdatePeerByUrl.peer.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b7b413d7-f0ec-47dc-a3b2-5bf280b15e3d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Peer",
					"id": "59afb9e0-8135-4789-82af-bb25e8e3f24e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Peer",
					"id": "d7f9de6b-e1bb-4c32-ab8b-22dbfab8fd7e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Peers",
					"id": "337b110b-f628-435f-a867-59d2aadffd2f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Peer",
					"id": "03ab7107-9f73-49dd-a88b-f21b20b58b33",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Peer Liquidity",
					"id": "dae94a92-9096-4dec-8fdc-a2e5f71357c9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Peer Liquidity",
					"id": "feb0fe1c-e4bb-4e60-97a9-5fd1640a4588",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Liquidity Withdrawal",
					"id": "cc04bed4-1dfd-41f7-8b44-269e958ea2ce",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Void Liquidity Withdrawal",
					"id": "ea87c137-200d-46d0-957a-4c59b9ca880d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Payment Pointer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e13dc1c-fd66-4ebe-b2a5-7c31d2489052",
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"paymentPointerId\", body.data.createPaymentPointer.paymentPointer.id);",
									"pm.expect(pm.environment.get(\"paymentPointerId\")).to.be.a('string');",
									"",
									"pm.environment.set(\"paymentPointerUrl\", body.data.createPaymentPointer.paymentPointer.url);",
									"pm.expect(pm.environment.get(\"paymentPointerUrl\")).to.be.a('string');",
									"",
									"pm.environment.set(\"createPaymentPointerRequest\", pm.request);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9460a51d-01bc-4adb-bcbc-a61682aadef1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "043fb957-3c19-4c4a-8261-8c205348e471",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Payment Pointer",
					"id": "b958ad31-76f6-498a-b6f7-9cb1b63f3545",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payment Pointer",
					"id": "460716c7-5ad2-4b6e-8e7c-afe6454b35c5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payment Pointers",
					"id": "b46c1e6a-d178-406b-a345-d4b744ff786e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Payment Pointer Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.collectionVariables.set(\"paymentPointerKeyId\", body.data.createPaymentPointerKey.paymentPointerKey.id);"
								],
								"type": "text/javascript",
								"id": "e49ee74d-5b34-4906-939b-16016d69ce19"
							}
						}
					],
					"id": "14ae0550-fecc-420b-baa5-b9cb58f17b71",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Payment Pointer Key",
					"id": "0e056e80-e55f-48b6-b8ea-764fc9a23236",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Incoming Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "392753e4-dadb-4f97-85bb-6ec69c21adc2",
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"incomingPaymentId\", body.data.createIncomingPayment.payment.id);",
									"pm.expect(pm.environment.get(\"incomingPaymentId\")).to.be.a('string');"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "bade3bf6-b640-4689-8b48-404de269ab64",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Receiver (remote Incoming Payment)",
					"id": "f69fd592-60d4-44d9-8e5e-6ac933215c32",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Quote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "392be05d-67fa-405a-814c-ce1dbfe51c9d",
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"quoteId\", body.data.createQuote.quote.id);",
									"pm.expect(pm.environment.get(\"quoteId\")).to.be.a('string');"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "95c61071-0756-4226-bcf8-20e5209f2f29",
								"exec": [
									"// Create an additional payment pointer to represent the account that will be sending money",
									"",
									"// Reset the uniquePaymentPointer value",
									"pm.environment.set(\"uniquePaymentPointer\", Math.floor(Math.random() * (1001)));",
									"",
									"const initialRequest = pm.environment.get(\"createPaymentPointerRequest\");",
									"",
									"const postRequest = {",
									"  url: initialRequest.url,",
									"  method: initialRequest.method,",
									"  body: {",
									"    mode: 'graphql',",
									"    graphql: {",
									"        query: initialRequest.body.graphql.query,",
									"        variables: JSON.stringify({",
									"            \"input\": {",
									"                \"assetId\": pm.environment.get(\"assetId\"),",
									"                \"url\": \"https://\" + pm.environment.get(\"OpenPaymentsHost\") + \"/simon/\" + pm.environment.get(\"uniquePaymentPointer\"),",
									"                \"publicName\": \"Simon\"",
									"            }",
									"        })",
									"    }",
									"  }",
									"};",
									"",
									"pm.sendRequest(postRequest, (error, response) => {",
									"    if (error) {",
									"        console.log(error);",
									"    }",
									"    const body = response.json();",
									"    pm.test('response should be okay to process', () => {",
									"        pm.expect(error).to.equal(null);",
									"        pm.expect(body.data.createPaymentPointer.code).to.equal('200');",
									"        pm.expect(body.data.createPaymentPointer.success).to.equal(true);",
									"    });",
									"    pm.environment.set(\"secondPaymentPointerId\", body.data.createPaymentPointer.paymentPointer.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f9bc6320-d67f-41b1-9d60-1a01216cdffd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Quote",
					"id": "e67ab3f0-4ae9-4158-896a-681ab47cb3b2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Outgoing Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e14ea4d3-8d68-4878-9166-df17a682759c",
								"exec": [
									"const body = pm.response.json();",
									"",
									"pm.environment.set(\"outgoingPaymentId\", body.data.createOutgoingPayment.payment.id);",
									"pm.expect(pm.environment.get(\"outgoingPaymentId\")).to.be.a('string');"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7b03c724-d17a-45c2-bafa-ca20937355e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Outgoing Payment",
					"id": "c6400be1-e0da-44bb-a903-4859cf80c50f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Incoming Payment",
					"id": "144e694c-7efc-4b2e-8363-b2557fee7c4a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{PeerGraphqlHost}}/graphql",
							"host": [
								"{{PeerGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payments",
					"id": "2e2d5b80-9002-4a7d-a721-ced5f597c57d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Event Liquidity",
					"id": "328a5ce7-8943-46b9-a80d-f4d8519030a2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Event Liquidity",
					"id": "14dfcef1-b1a0-42b3-bcae-b140ff1c2949",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Payment Pointer Withdrawal",
					"id": "723323df-c31c-40b9-be6a-e6411cabcbea",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trigger Payment Pointer Events",
					"id": "12e5762b-7c73-4684-afcb-12cf9103ccbd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Webhook Events",
					"id": "6f242d51-4c26-4692-9347-f998a0aa82dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiGraphqlHost}}/graphql",
							"host": [
								"{{RafikiGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"id": "80960dab-c1ff-48ee-8f22-cc914e3ab321"
		},
		{
			"name": "Rafiki Admin Auth APIs",
			"item": [
				{
					"name": "Get Grant",
					"id": "faefef5e-e266-407b-a9a5-0980ec0d3f1d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiAuthGraphqlHost}}/graphql",
							"host": [
								"{{RafikiAuthGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Grants",
					"id": "1a94133d-ca54-4d57-b175-53491c4a8a33",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiAuthGraphqlHost}}/graphql",
							"host": [
								"{{RafikiAuthGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Grant",
					"id": "a827654c-d68e-48e5-b847-5aefa9878c20",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql"
						},
						"url": {
							"raw": "{{RafikiAuthGraphqlHost}}/graphql",
							"host": [
								"{{RafikiAuthGraphqlHost}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"id": "db29b0e8-5ef4-4be5-a609-43ae54637c2b"
		},
		{
			"name": "Open Payments APIs",
			"item": [
				{
					"name": "Payment Pointer",
					"item": [
						{
							"name": "Get a Payment Pointer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"id": "cd4205be-981e-4fdd-b371-e7e0a0d3775b"
									}
								}
							],
							"id": "dc944069-fd02-4314-ad54-b023dbb4ad4d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "happy-life-bank-backend"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:4000/accounts/paaaa",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"accounts",
										"paaaa"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Payment Pointer Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"id": "a179c23e-a520-4e1a-af8f-018e2a85e648"
									}
								}
							],
							"id": "44b72640-d73f-4770-ba87-fde03a6608c6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "happy-life-bank-backend"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:4000/accounts/paaaa",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"accounts",
										"paaaa"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Payment Pointer Keys",
							"id": "16898861-ae68-4e3c-a299-561e0b5115eb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "happy-life-bank-backend"
									}
								],
								"url": {
									"raw": "{{pfryPaymentPointer}}/jwks.json",
									"host": [
										"{{pfryPaymentPointer}}"
									],
									"path": [
										"jwks.json"
									]
								}
							},
							"response": []
						}
					],
					"id": "5c847bf0-6e79-4535-bd68-5c0663223a4a"
				},
				{
					"name": "STREAM connection",
					"item": [
						{
							"name": "Get STREAM credentials",
							"id": "1ba3e6b8-476d-4ce5-bb37-a1e6df368b9a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "happy-life-bank-backend"
									}
								],
								"url": {
									"raw": "{{PeerOpenPaymentsHost}}/connections/{{connectionId}}",
									"host": [
										"{{PeerOpenPaymentsHost}}"
									],
									"path": [
										"connections",
										"{{connectionId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "7bcc7851-c817-498c-951f-0fe02ec89d57"
				},
				{
					"name": "Incoming Payments",
					"item": [
						{
							"name": "Create Incoming Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "caa091fe-1dc9-4d28-9a5d-e6127fb30f6e",
										"exec": [
											"pm.environment.set(\"tomorrow\", (new Date(new Date().setDate(new Date().getDate() + 1))).toISOString());",
											"",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c4b1c24d-3754-4971-9819-59d22b648d46",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"incomingPaymentId\", body.id.split(\"/\").pop());",
											"pm.environment.set(\"connectionId\", body.ilpStreamConnection.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e4b72fb5-4f3f-4432-8954-d373fb0a1fdf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "happy-life-bank-backend"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"incomingAmount\": {\n        \"value\": \"2000\",\n        \"assetCode\": \"USD\",\n        \"assetScale\": 2\n    },\n    \"expiresAt\": \"{{tomorrow}}\",\n    \"metadata\": {\n        \"description\": \"Incoming Payment on Own Account\",\n        \"externalRef\": \"INV-001\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pfryPaymentPointer}}/incoming-payments",
									"host": [
										"{{pfryPaymentPointer}}"
									],
									"path": [
										"incoming-payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Incoming Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e470313e-df91-40f8-9eea-7b0b9264f0cc",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8bf21039-770a-4142-9ebd-2313179ea3a9",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f53a6f9d-c584-4e0b-a4d6-19d22d7f01fc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "happy-life-bank-backend"
									}
								],
								"url": {
									"raw": "{{pfryPaymentPointer}}/incoming-payments/{{incomingPaymentId}}",
									"host": [
										"{{pfryPaymentPointer}}"
									],
									"path": [
										"incoming-payments",
										"{{incomingPaymentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Incoming Payments",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6eb5268-63cd-4d64-bf7d-dcbfd45adbd8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "87613034-e6c7-4180-99dd-f1964cd3d95f",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5419f178-c2ad-4dce-a6a8-aee433e1853f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "happy-life-bank-backend"
									}
								],
								"url": {
									"raw": "{{pfryPaymentPointer}}/incoming-payments?first=10",
									"host": [
										"{{pfryPaymentPointer}}"
									],
									"path": [
										"incoming-payments"
									],
									"query": [
										{
											"key": "cursor",
											"value": "ea3bf38f-2719-4473-a0f7-4ba967d1d81b",
											"disabled": true
										},
										{
											"key": "first",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Complete Incoming Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a6d72138-356b-4d88-bcd2-5ae789c5350a",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f93e516b-98b2-4065-9289-23b34aa93f8f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "happy-life-bank-backend"
									}
								],
								"url": {
									"raw": "{{pfryPaymentPointer}}/incoming-payments/{{incomingPaymentId}}/complete",
									"host": [
										"{{pfryPaymentPointer}}"
									],
									"path": [
										"incoming-payments",
										"{{incomingPaymentId}}",
										"complete"
									]
								}
							},
							"response": []
						}
					],
					"id": "917f1a75-cc3b-4fbe-9e77-2bea96aef73a"
				},
				{
					"name": "Quotes",
					"item": [
						{
							"name": "Create Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71bb0f65-24f5-49f5-bd9c-97c55d49f721",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"quoteId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6ce6e33f-7b29-4b94-b416-20337f7ff243",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "da11fa53-1bea-4e25-87d4-83c3c20b8b4f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "cloud-nine-wallet-backend"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"receiver\": \"https://happy-life-bank-backend/accounts/pfry/incoming-payments/{{incomingPaymentId}}\",\n    \"debitAmount\": {\n        \"value\": \"1000\",\n        \"assetCode\": \"USD\",\n        \"assetScale\": 2\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{gfranklinPaymentPointer}}/quotes",
									"host": [
										"{{gfranklinPaymentPointer}}"
									],
									"path": [
										"quotes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92101ea0-6149-4185-9a92-5eb9e259c8f2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "74ae1692-8bd2-4fce-82ae-80b5511ad273",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1800178d-af72-4e58-a4c4-11ef60b99f3c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "cloud-nine-wallet-backend"
									}
								],
								"url": {
									"raw": "{{gfranklinPaymentPointer}}/quotes/{{quoteId}}",
									"host": [
										"{{gfranklinPaymentPointer}}"
									],
									"path": [
										"quotes",
										"{{quoteId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "4a2c07bd-9764-4423-a475-2306a938c4c3"
				},
				{
					"name": "Outgoing Payments",
					"item": [
						{
							"name": "Create Outgoing Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2e8b391-42d1-41c3-86c5-211b7e17fee4",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5a45347d-1300-43e9-bc9c-6ff3f93a221b",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"outgoingPaymentId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "57131c01-53f4-481c-91ce-bd5c2ddd3571",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "cloud-nine-wallet-backend"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"quoteId\": \"{{gfranklinPaymentPointer}}/quotes/{{quoteId}}\",\n    \"description\": \"yolo\",\n    \"externalRef\": \"INV-001\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{gfranklinPaymentPointer}}/outgoing-payments",
									"host": [
										"{{gfranklinPaymentPointer}}"
									],
									"path": [
										"outgoing-payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Outgoing Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7fb0a03-d14d-41fe-911f-c341c33509b5",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e35d683d-cbc4-4504-986d-236afecfeb2f",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cc6e54d5-8fde-4126-ada0-d7a6330d2877",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "cloud-nine-wallet-backend"
									}
								],
								"url": {
									"raw": "{{gfranklinPaymentPointer}}/outgoing-payments/{{outgoingPaymentId}}",
									"host": [
										"{{gfranklinPaymentPointer}}"
									],
									"path": [
										"outgoing-payments",
										"{{outgoingPaymentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Outgoing Payments",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3504c6dd-d168-4250-bcad-36b43258a7a9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "df89a29d-3e40-4c4d-ae97-aff71d1152e5",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dab3e7fe-e6a6-4c9d-ac46-7e1ca748e89c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "cloud-nine-wallet-backend"
									}
								],
								"url": {
									"raw": "{{gfranklinPaymentPointer}}/outgoing-payments?first=2",
									"host": [
										"{{gfranklinPaymentPointer}}"
									],
									"path": [
										"outgoing-payments"
									],
									"query": [
										{
											"key": "first",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "ea3bf38f-2719-4473-a0f7-4ba967d1d81b",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "36d5feb1-9070-4c34-baae-03880f3ebc37"
				}
			],
			"id": "68ab1798-73e3-4b7a-9a2d-5b5553676abf"
		},
		{
			"name": "Open Payments Auth APIs",
			"item": [
				{
					"name": "Grants",
					"item": [
						{
							"name": "Grant Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74b3189e-9861-4995-9d54-4c23a4a58f85",
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body?.access_token?.value);",
											"pm.environment.set(\"continueToken\", body.continue.access_token.value);",
											"pm.environment.set(\"continueId\", body.continue.uri.split(\"/\").pop());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "050fd7ca-ce29-4006-88da-eaa088f81c65",
										"exec": [
											"eval(pm.environment.get('preRequestSignaturesGrantRequest'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ba35560d-5fc2-41ed-885f-f806ac1ba064",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": {\n        \"access\": [\n            {\n                \"type\": \"quote\",\n                \"actions\": [\n                    \"create\", \"read\"\n                ]\n            },\n            {\n                \"type\": \"outgoing-payment\",\n                \"actions\": [\n                    \"create\", \"read\", \"list\"\n                ],\n                \"identifier\": \"http://localhost:3000/accounts/gfranklin\",\n                \"limits\": {\n                    \"debitAmount\": {\n                        \"value\": \"8000\",\n                        \"assetCode\": \"USD\",\n                        \"assetScale\": 2\n                    },\n                    \"receiveAmount\": {\n                        \"value\": \"8000\",\n                        \"assetCode\": \"USD\",\n                        \"assetScale\": 2\n                    }\n                }\n            }\n        ]\n    },\n    \"client\": \"https://happy-life-bank-backend/accounts/pfry\",\n    \"interact\": {\n        \"start\": [\n            \"redirect\"\n        ],\n        \"finish\": {\n            \"method\": \"redirect\",\n            \"uri\": \"http://localhost:3030/mock-idp/fake-client\",\n            \"nonce\": \"123\"\n        }\n    }\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OpenPaymentsAuthHost}}/",
									"host": [
										"{{OpenPaymentsAuthHost}}"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Continuation Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8cb5f1f7-f958-4027-91c4-abf77b074628",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7eb715ec-6969-4828-8f88-5dbc945911e5",
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body.access_token.value);",
											"pm.environment.set(\"tokenId\", body.access_token.manage.split('/').pop())"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7f4fb91c-d774-4cd7-8c7c-e78ef8ddee0c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{continueToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n     \"interact_ref\": \"fdfa9202-3e68-4c2a-8049-25135704a1cb\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OpenPaymentsAuthHost}}/continue/{{continueId}}",
									"host": [
										"{{OpenPaymentsAuthHost}}"
									],
									"path": [
										"continue",
										"{{continueId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "f5b465a8-51c9-4732-911f-446598446859"
				},
				{
					"name": "Tokens",
					"item": [
						{
							"name": "Rotate Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "eb7befe9-0495-4a9d-9ec4-7ef8b71ba28a",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "daee1fdf-371c-4937-b08c-000b082d62b2",
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body.access_token.value);",
											"pm.environment.set(\"tokenId\", body.access_token.manage.split('/').pop())"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6ecdf28c-3b2f-4102-9c2e-4c2477c59fec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{OpenPaymentsAuthHost}}/token/{{tokenId}}",
									"host": [
										"{{OpenPaymentsAuthHost}}"
									],
									"path": [
										"token",
										"{{tokenId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "26636043-f66d-4ce5-b97a-e3028a1f92f9",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "68e90f62-a141-4185-acaa-0c82e64898ba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{OpenPaymentsAuthHost}}/token/{{tokenId}}",
									"host": [
										"{{OpenPaymentsAuthHost}}"
									],
									"path": [
										"token",
										"{{tokenId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "2fcfdcb1-f479-4c80-81db-34a2f134d8c8"
				}
			],
			"id": "b0b9bd90-8eea-442d-a630-c51568f6f7a7"
		},
		{
			"name": "Examples",
			"item": [
				{
					"name": "eCommerce",
					"item": [
						{
							"name": "Grant Request Incoming Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5f764b9-c03d-4b6c-83ca-ae24e6f55e4f",
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body?.access_token?.value);",
											"pm.environment.set(\"continueToken\", body.continue.access_token.value);",
											"pm.environment.set(\"continueId\", body.continue.uri.split(\"/\").pop());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "83d3567b-3130-4b30-ba29-002b04200bb0",
										"exec": [
											"eval(pm.environment.get('preRequestSignaturesGrantRequest'))",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3db7c842-1a3d-4e27-a8d7-acc10d85707f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": {\n        \"access\": [\n            {\n                \"type\": \"incoming-payment\",\n                \"actions\": [\n                    \"create\", \"read\", \"list\", \"complete\"\n                ]\n            }\n        ]\n    },\n    \"client\": \"https://happy-life-bank-backend/accounts/pfry\",\n    \"interact\": {\n        \"start\": [\n            \"redirect\"\n        ],\n        \"finish\": {\n            \"method\": \"redirect\",\n            \"uri\": \"http://localhost:3030/mock-idp/fake-client\",\n            \"nonce\": \"123\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PeerOpenPaymentsAuthHost}}/",
									"host": [
										"{{PeerOpenPaymentsAuthHost}}"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Incoming Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2875a4c6-e892-4f51-bbe7-ba9b3106dd30",
										"exec": [
											"pm.environment.set(\"tomorrow\", (new Date(new Date().setDate(new Date().getDate() + 1))).toISOString());",
											"",
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9ff1e840-379e-4607-bac9-7214d9feba3a",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"incomingPaymentId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0e52a773-e524-40f5-b7c2-78d965be3d49",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "happy-life-bank-backend"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"incomingAmount\": {\n        \"value\": \"3364\",\n        \"assetCode\": \"USD\",\n        \"assetScale\": 2\n    },\n    \"expiresAt\": \"{{tomorrow}}\",\n    \"metadata\": {\n        \"description\": \"Purchase Shoe Shop\", \n        \"externalRef\": \"#INV2022-8363828\",\n        \"items\": [1,2,3,4]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pfryPaymentPointer}}/incoming-payments",
									"host": [
										"{{pfryPaymentPointer}}"
									],
									"path": [
										"incoming-payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Grant Request Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6db521ee-3992-48b0-a387-8123987d0160",
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body?.access_token?.value);",
											"pm.environment.set(\"continueToken\", body.continue.access_token.value);",
											"pm.environment.set(\"continueId\", body.continue.uri.split(\"/\").pop());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2b2506f7-453f-46a4-b18e-a292c9f5cbe0",
										"exec": [
											"eval(pm.environment.get('preRequestSignaturesGrantRequest'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e8e6f6a9-7de9-4aed-b40b-98af261092e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": {\n        \"access\": [\n            {\n                \"type\": \"quote\",\n                \"actions\": [\n                    \"create\", \"read\"\n                ]\n            }\n        ]\n    },\n    \"client\": \"https://happy-life-bank-backend/accounts/pfry\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OpenPaymentsAuthHost}}/",
									"host": [
										"{{OpenPaymentsAuthHost}}"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cc3508b-e6c3-403b-a0f9-2ee342d80e20",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"quoteId\", body.id.split(\"/\").pop());",
											"pm.environment.set(\"quoteDebitAmountValue\", body.debitAmount.value)",
											"pm.environment.set(\"quoteReceiveAmountValue\", body.receiveAmount.value)",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d1a1d45b-0960-425e-aca2-bfde31299a5b",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cee9cb80-8f61-416a-8db0-e86869dc95ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "cloud-nine-wallet-backend"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"receiver\": \"https://happy-life-bank-backend/accounts/pfry/incoming-payments/{{incomingPaymentId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{gfranklinPaymentPointer}}/quotes",
									"host": [
										"{{gfranklinPaymentPointer}}"
									],
									"path": [
										"quotes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Grant Request Outgoing Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8400e76-2895-46fc-9753-8c4a1197a224",
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body?.access_token?.value);",
											"pm.environment.set(\"continueToken\", body.continue.access_token.value);",
											"pm.environment.set(\"continueId\", body.continue.uri.split(\"/\").pop());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7ca3031d-41c3-476b-9f5f-e730a80e60f3",
										"exec": [
											"eval(pm.environment.get('preRequestSignaturesGrantRequest'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "748d7f89-3e85-47c2-bbb2-bb63e0cbb521",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": {\n        \"access\": [\n            {\n                \"type\": \"outgoing-payment\",\n                \"actions\": [\n                    \"create\", \"read\", \"list\"\n                ],\n                \"identifier\": \"https://cloud-nine-wallet-backend/accounts/gfranklin\",\n                \"limits\": {\n                    \"debitAmount\": {\n                        \"value\": \"{{quoteDebitAmountValue}}\",\n                        \"assetCode\": \"USD\",\n                        \"assetScale\": 2\n                    },\n                    \"receiveAmount\": {\n                        \"value\": \"{{quoteReceiveAmountValue}}\",\n                        \"assetCode\": \"USD\",\n                        \"assetScale\": 2\n                    }\n                }\n            }\n        ]\n    },\n    \"client\": \"https://happy-life-bank-backend/accounts/pfry\",\n    \"interact\": {\n        \"start\": [\n            \"redirect\"\n        ],\n        \"finish\": {\n            \"method\": \"redirect\",\n            \"uri\": \"http://localhost:3030/mock-idp/fake-client\",\n            \"nonce\": \"456\"\n        }\n    }\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OpenPaymentsAuthHost}}/",
									"host": [
										"{{OpenPaymentsAuthHost}}"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Continuation Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86731ed6-7a10-41cc-98bd-a66f69cc4ba6",
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body.access_token.value);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1174ff73-124c-45ef-aec8-ce69412c657c",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4a781d51-e079-4819-b4ca-b8eaf665fe0b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{continueToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n     \"interact_ref\": \"13f7b3da-34a6-4bb1-af34-3eecd495e076\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OpenPaymentsAuthHost}}/continue/{{continueId}}",
									"host": [
										"{{OpenPaymentsAuthHost}}"
									],
									"path": [
										"continue",
										"{{continueId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Outgoing Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "10d12352-354f-4677-92d0-a981281fc847",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "00b7ef64-ebe8-47ac-930c-48f88f504cff",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"outgoingPaymentId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d509da6b-97ad-4b96-9809-be98c5d0a410",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "cloud-nine-wallet-backend"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"quoteId\": \"{{gfranklinPaymentPointer}}/quotes/{{quoteId}}\",\n    \"metadata\": {\n        \"description\": \"Your purchase at Shoe Shop\",\n        \"externalRef\": \"#INV2022-8363828\",\n        \"items\": [1,2,3,4]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{gfranklinPaymentPointer}}/outgoing-payments",
									"host": [
										"{{gfranklinPaymentPointer}}"
									],
									"path": [
										"outgoing-payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Outgoing Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "411d341d-ee33-4d2c-b5df-2da559ef1dd5",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6f2536a0-d6e0-4b83-a077-779eb17b43c6",
										"exec": [
											"eval(pm.environment.get('preRequestSignatures'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "152f0f9e-9099-4f4f-8dc0-cdebd8199f17",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "cloud-nine-wallet-backend"
									}
								],
								"url": {
									"raw": "{{gfranklinPaymentPointer}}/outgoing-payments/{{outgoingPaymentId}}",
									"host": [
										"{{gfranklinPaymentPointer}}"
									],
									"path": [
										"outgoing-payments",
										"{{outgoingPaymentId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "006da4f1-b2d5-49ad-bfd6-ed22f4c28b0b"
				},
				{
					"name": "Peer-to-Peer Payment",
					"item": [
						{
							"name": "Create Receiver (remote Incoming Payment)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "04170aaa-f63d-44c6-9d8b-5b0efc029a29",
										"exec": [
											"const body = pm.response.json();",
											"",
											"pm.environment.set(\"receiverId\", body.data.createReceiver.receiver.id);",
											"pm.expect(pm.environment.get(\"receiverId\")).to.be.a('string');"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5fd74535-dd20-4de7-beb6-bc087457f974",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql"
								},
								"url": {
									"raw": "{{RafikiGraphqlHost}}/graphql",
									"host": [
										"{{RafikiGraphqlHost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0ed0e338-d9a9-4473-a2ed-7a05dda59c87",
										"exec": [
											"const body = pm.response.json();",
											"",
											"pm.environment.set(\"quoteId\", body.data.createQuote.quote.id);",
											"pm.expect(pm.environment.get(\"quoteId\")).to.be.a('string');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "647eb01c-99f9-4b56-a900-0b9568a4801d",
										"exec": [
											"",
											"const getPaymentPointersQuery = `",
											"query GetPaymentPointers {",
											"    paymentPointers {",
											"        edges {",
											"            cursor",
											"            node {",
											"                id",
											"                publicName",
											"                url",
											"            }",
											"        }",
											"    }",
											"}`",
											"",
											"const postRequest = {",
											"  url: `${pm.environment.get(\"RafikiGraphqlHost\")}/graphql`,",
											"  method: 'POST',",
											"  body: {",
											"    mode: 'graphql',",
											"    graphql: {",
											"        query:getPaymentPointersQuery",
											"    }",
											"  }",
											"};",
											"",
											"",
											"pm.sendRequest(postRequest, (error, response) => {",
											"    const body = response.json();",
											"    const gfranklinPaymentPointerId = body.data.paymentPointers.edges.map(e => e.node).find(node => node.publicName === 'Grace Franklin')?.id",
											"",
											"    pm.collectionVariables.set(\"gfranklinPaymentPointerId\", gfranklinPaymentPointerId)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2a1804f2-0837-463a-8bea-f3923dc64eb3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql"
								},
								"url": {
									"raw": "{{RafikiGraphqlHost}}/graphql",
									"host": [
										"{{RafikiGraphqlHost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Outgoing Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc6e4b1f-7801-4b5a-af3b-c1940638e4ca",
										"exec": [
											"const body = pm.response.json();",
											"",
											"pm.environment.set(\"outgoingPaymentId\", body.data.createOutgoingPayment.payment.id);",
											"pm.expect(pm.environment.get(\"outgoingPaymentId\")).to.be.a('string');"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5a862575-5a2e-4583-a543-c9ed3cba7760",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql"
								},
								"url": {
									"raw": "{{RafikiGraphqlHost}}/graphql",
									"host": [
										"{{RafikiGraphqlHost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Outgoing Payment",
							"id": "56f350b2-d40e-4ef8-8eab-9a6c29e1814d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql"
								},
								"url": {
									"raw": "{{RafikiGraphqlHost}}/graphql",
									"host": [
										"{{RafikiGraphqlHost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					],
					"id": "3d39d36e-0a67-4a96-b102-08b495a53aed"
				},
				{
					"name": "Peer-to-Peer Cross Currency Payment",
					"item": [
						{
							"name": "Create Receiver (remote Incoming Payment)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6755dfd4-a189-4c85-9af5-6ad37208a4b5",
										"exec": [
											"const body = pm.response.json();",
											"",
											"pm.environment.set(\"receiverId\", body.data.createReceiver.receiver.id);",
											"pm.expect(pm.environment.get(\"receiverId\")).to.be.a('string');"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dbf74a1d-4151-441c-afaa-accf400cedf6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql"
								},
								"url": {
									"raw": "{{RafikiGraphqlHost}}/graphql",
									"host": [
										"{{RafikiGraphqlHost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "448e81db-0472-4667-88c5-1e8614d9f6f9",
										"exec": [
											"const body = pm.response.json();",
											"",
											"pm.environment.set(\"quoteId\", body.data.createQuote.quote.id);",
											"pm.expect(pm.environment.get(\"quoteId\")).to.be.a('string');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "67e3cf12-6618-4afa-9bce-2c854fa0b652",
										"exec": [
											"",
											"const getPaymentPointersQuery = `",
											"query GetPaymentPointers {",
											"    paymentPointers {",
											"        edges {",
											"            cursor",
											"            node {",
											"                id",
											"                publicName",
											"                url",
											"            }",
											"        }",
											"    }",
											"}`",
											"",
											"const postRequest = {",
											"  url: `${pm.environment.get(\"RafikiGraphqlHost\")}/graphql`,",
											"  method: 'POST',",
											"  body: {",
											"    mode: 'graphql',",
											"    graphql: {",
											"        query:getPaymentPointersQuery",
											"    }",
											"  }",
											"};",
											"",
											"",
											"pm.sendRequest(postRequest, (error, response) => {",
											"    const body = response.json();",
											"    const gfranklinPaymentPointerId = body.data.paymentPointers.edges.map(e => e.node).find(node => node.publicName === 'Grace Franklin')?.id",
											"",
											"    pm.collectionVariables.set(\"gfranklinPaymentPointerId\", gfranklinPaymentPointerId)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2216f89d-1bf7-4d66-9fe6-7a669c9da0f7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql"
								},
								"url": {
									"raw": "{{RafikiGraphqlHost}}/graphql",
									"host": [
										"{{RafikiGraphqlHost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Outgoing Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ecdab97-a400-4b84-b763-0bb2baf48cda",
										"exec": [
											"const body = pm.response.json();",
											"",
											"pm.environment.set(\"outgoingPaymentId\", body.data.createOutgoingPayment.payment.id);",
											"pm.expect(pm.environment.get(\"outgoingPaymentId\")).to.be.a('string');"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "acb23392-8f01-4458-9597-d6361c2b6ea3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql"
								},
								"url": {
									"raw": "{{RafikiGraphqlHost}}/graphql",
									"host": [
										"{{RafikiGraphqlHost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Outgoing Payment",
							"id": "e30569fd-99d9-409b-8123-6eb57f8929d2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql"
								},
								"url": {
									"raw": "{{RafikiGraphqlHost}}/graphql",
									"host": [
										"{{RafikiGraphqlHost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					],
					"id": "a09ce747-d057-49b8-80d0-acd4e14b4680"
				}
			],
			"id": "f04fb4d6-48f5-45cb-8621-9d248ecf9ebc"
		},
		{
			"name": "Demos",
			"item": [
				{
					"name": "ILP Summit Demo",
					"item": [
						{
							"name": "Grant Request Incoming Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body?.access_token?.value);",
											"pm.environment.set(\"continueToken\", body.continue.access_token.value);",
											"pm.environment.set(\"continueId\", body.continue.uri.split(\"/\").pop());",
											""
										],
										"type": "text/javascript",
										"id": "e5ebf2c7-86f9-437b-9b7c-cb2d25f94223"
									}
								}
							],
							"id": "2b6b9e2a-dd83-446a-9fd3-fa1625301232",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Signature-Input",
										"value": "TODO",
										"type": "text"
									},
									{
										"key": "Signature",
										"value": "TODO",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": {\n        \"access\": [\n            {\n                \"type\": \"incoming-payment\",\n                \"actions\": [\n                    \"create\", \"read\", \"list\", \"complete\"\n                ]\n            }\n        ]\n    },\n    \"client\": {\n        \"display\": {\n            \"name\": \"Shoe Shop\",\n            \"uri\": \"https://www.saagershoeshop.com\"\n        },\n        \"key\": {\n            \"proof\": \"httpsig\",\n            \"jwk\": {\n                \"alg\": \"EdDSA\",\n                \"kty\": \"OKP\",\n                \"use\": \"sig\",\n                \"crv\": \"Ed25519\",\n                \"kid\": \"http://fynbos/keys/12345\",\n                \"x\": \"jfiusdhvherui4vueurygygb8\"\n            }\n        }\n    },\n    \"interact\": {\n        \"start\": [\n            \"redirect\"\n        ],\n        \"finish\": {\n            \"method\": \"redirect\",\n            \"uri\": \"http://localhost:3030/mock-idp/fake-client\",\n            \"nonce\": \"123\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BankOpenPaymentsAuthHost}}/",
									"host": [
										"{{BankOpenPaymentsAuthHost}}"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Incoming Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"tomorrow\", (new Date(new Date().setDate(new Date().getDate() + 1))).toISOString());"
										],
										"type": "text/javascript",
										"id": "ade907da-6bf4-41a4-b791-3a68bb3420df"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"incomingPaymentId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript",
										"id": "9cc0942d-d1a9-43d3-ad73-8165e844ce12"
									}
								}
							],
							"id": "f52a21a1-9ede-454f-b123-958e05f19e82",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}"
									},
									{
										"key": "Host",
										"value": "peer-backend"
									},
									{
										"key": "Signature-Input",
										"value": "TODO",
										"type": "text"
									},
									{
										"key": "Signature",
										"value": "TODO",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"incomingAmount\": {\n        \"value\": \"3364\",\n        \"assetCode\": \"USD\",\n        \"assetScale\": 2\n    },\n    \"expiresAt\": \"{{tomorrow}}\",\n    \"metadata\": {\n        \"description\": \"Purchase Shoe Shop\",\n        \"externalRef\": \"#INV2022-8363828\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PhilipFryPaymentPointer}}/incoming-payments",
									"host": [
										"{{PhilipFryPaymentPointer}}"
									],
									"path": [
										"incoming-payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Grant Request Quote + Outgoing Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7ef6821-3e63-4b82-9fb2-a9a7d2ade30c",
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body?.access_token?.value);",
											"pm.environment.set(\"continueToken\", body.continue.access_token.value);",
											"pm.environment.set(\"continueId\", body.continue.uri.split(\"/\").pop());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e129b295-9a96-4936-9ba0-6ba702325fa0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Signature-Input",
										"value": "TODO",
										"type": "text"
									},
									{
										"key": "Signature",
										"value": "TODO",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": {\n        \"access\": [\n            {\n                \"type\": \"quote\",\n                \"actions\": [\n                    \"create\", \"read\"\n                ]\n            },\n            {\n                \"type\": \"outgoing-payment\",\n                \"actions\": [\n                    \"create\", \"read\", \"list\"\n                ],\n                \"identifier\": \"https://backend/accounts/gfranklin\",\n                \"limits\": {\n                    \"debitAmount\": {\n                        \"value\": \"3600\",\n                        \"assetCode\": \"USD\",\n                        \"assetScale\": 2\n                    },\n                    \"receiveAmount\": {\n                        \"value\": \"3364\",\n                        \"assetCode\": \"USD\",\n                        \"assetScale\": 2\n                    }\n                }\n            }\n        ]\n    },\n    \"client\": {\n        \"display\": {\n            \"name\": \"Shoe Shop\",\n            \"uri\": \"https://www.saagershoeshop.com\"\n        },\n        \"key\": {\n            \"proof\": \"httpsig\",\n            \"jwk\": {\n                \"alg\": \"EdDSA\",\n                \"kty\": \"OKP\",\n                \"use\": \"sig\",\n                \"crv\": \"Ed25519\",\n                \"kid\": \"http://fynbos/keys/12345\",\n                \"x\": \"jfiusdhvherui4vueurygygb8\"\n            }\n        }\n    },\n    \"interact\": {\n        \"start\": [\n            \"redirect\"\n        ],\n        \"finish\": {\n            \"method\": \"redirect\",\n            \"uri\": \"http://localhost:3030/mock-idp/fake-client\",\n            \"nonce\": \"456\"\n        }\n    }\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{FynbosOpenPaymentsAuthHost}}/",
									"host": [
										"{{FynbosOpenPaymentsAuthHost}}"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Continuation Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.json();",
											"pm.environment.set(\"accessToken\", body.access_token.value);"
										],
										"type": "text/javascript",
										"id": "f56c8c07-57ce-41cd-9dc0-0ad336db466f"
									}
								}
							],
							"id": "5927c2d2-3de7-4ed6-9317-34afa9c93424",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{continueToken}}",
										"type": "text"
									},
									{
										"key": "Signature-Input",
										"value": "TODO",
										"type": "text"
									},
									{
										"key": "Signature",
										"value": "TODO",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n     \"interact_ref\": \"a31b55bf-2d1e-44eb-b99e-0d98a1a953f4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{FynbosOpenPaymentsAuthHost}}/continue/{{continueId}}",
									"host": [
										"{{FynbosOpenPaymentsAuthHost}}"
									],
									"path": [
										"continue",
										"{{continueId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"quoteId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript",
										"id": "e062ab3b-66e8-4366-bfb0-3a41067fd32b"
									}
								}
							],
							"id": "0bdfc678-de76-439f-993b-61c62ead659b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "backend",
										"type": "text"
									},
									{
										"key": "Signature-Input",
										"value": "TODO",
										"type": "text"
									},
									{
										"key": "Signature",
										"value": "TODO",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"receiver\": \"https://peer-backend/accounts/pfry/incoming-payments/{{incomingPaymentId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GraceFranklinPaymentPointer}}/quotes",
									"host": [
										"{{GraceFranklinPaymentPointer}}"
									],
									"path": [
										"quotes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Outgoing Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "75620f78-a656-439e-81b7-189465bdf71c"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const body = pm.response.json();",
											"pm.environment.set(\"outgoingPaymentId\", body.id.split(\"/\").pop());",
											""
										],
										"type": "text/javascript",
										"id": "de3c6e46-9ef8-4b57-8f9e-8e8c596fe00b"
									}
								}
							],
							"id": "375c7f8f-150a-4b24-902d-fa22d8cbfad1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "backend",
										"type": "text"
									},
									{
										"key": "Signature-Input",
										"value": "TODO",
										"type": "text"
									},
									{
										"key": "Signature",
										"value": "TODO",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"quoteId\": \"{{GraceFranklinPaymentPointer}}/quotes/{{quoteId}}\",\n    \"metadata\": {\n        \"description\": \"Your purchase at Shoe Shop\",\n        \"externalRef\": \"#INV2022-8363828\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GraceFranklinPaymentPointer}}/outgoing-payments",
									"host": [
										"{{GraceFranklinPaymentPointer}}"
									],
									"path": [
										"outgoing-payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Outgoing Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"id": "b4bdc13b-7173-4a94-bd86-7a34c5751205"
									}
								}
							],
							"id": "2746900a-7145-4361-8a91-38e8f2283165",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "GNAP {{accessToken}}",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "backend",
										"type": "text"
									},
									{
										"key": "Signature-Input",
										"value": "TODO",
										"type": "text"
									},
									{
										"key": "Signature",
										"value": "TODO",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{GraceFranklinPaymentPointer}}/outgoing-payments/{{outgoingPaymentId}}",
									"host": [
										"{{GraceFranklinPaymentPointer}}"
									],
									"path": [
										"outgoing-payments",
										"{{outgoingPaymentId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "6870cb41-e845-47c7-b855-71ba4b99c244"
				}
			],
			"id": "47725393-3052-4727-b22e-4776d54e2ff0"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2318737f-8e80-4629-9ab8-cb0dbe9fce19",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "bd797e77-0dce-4023-b6c0-6223c830548a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}