meta {
  name: Grant Request
  type: http
  seq: 1
}

post {
  url: {{receiverOpenPaymentsAuthHost}}/
  body: json
  auth: none
}

body:json {
  {
      "access_token": {
          "access": [
              {
                  "type": "quote",
                  "actions": [
                      "create", "read"
                  ]
              },
              {
                  "type": "outgoing-payment",
                  "actions": [
                      "create", "read", "list"
                  ],
                  "identifier": "{{senderWalletAddress}}",
                  "limits": {
                      "debitAmount": {
                          "value": "8000",
                          "assetCode": "USD",
                          "assetScale": 2
                      },
                      "receiveAmount": {
                          "value": "8000",
                          "assetCode": "USD",
                          "assetScale": 2
                      }
                  }
              }
          ]
      },
      "client": "{{clientWalletAddress}}",
      "interact": {
          "start": [
              "redirect"
          ],
          "finish": {
              "method": "redirect",
              "uri": "http://localhost:3030/mock-idp/fake-client",
              "nonce": "123"
          }
      }
  }
  
}

script:pre-request {
  // eval(pm.environment.get('preRequestSignatures'))
}

tests {
  // const body = pm.response.json();
  // pm.environment.set("accessToken", body?.access_token?.value);
  // pm.environment.set("continueToken", body.continue.access_token.value);
  // pm.environment.set("continueId", body.continue.uri.split("/").pop());
  // pm.environment.set("tokenId", body.access_token.manage.split('/').pop())
}
