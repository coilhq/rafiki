meta {
  name: Get sender wallet address
  type: http
  seq: 1
}

get {
  url: {{senderWalletAddress}}
  body: none
  auth: none
}

headers {
  Accept: application/json
}

script:pre-request {
  const url = require('url')
  
  const requestUrl = url.parse(req.url
    .replace(/{{([A-Za-z]\w+)}}/g, (_, key) => bru.getEnvVar(key)))
  
  bru.setEnvVar("senderOpenPaymentsHost", requestUrl.protocol + '//' + requestUrl.host);
  
  // if(bru.getEnvVar('preRequestHost')){
  //     eval(bru.getEnvVar('preRequestHost'))
  // }
  
  if(requestUrl.hostname === 'localhost'){
      const hostHeader = requestUrl.port === '3000'? bru.getEnvVar('host3000'): bru.getEnvVar('host4000')
      req.headers.host = hostHeader
  }
}

script:post-response {
  const url = require('url')
  
  const body = res.body
  bru.setEnvVar("senderAssetCode", body?.assetCode)
  bru.setEnvVar("senderAssetScale", body?.assetScale)
  
  const authUrl = url.parse(body?.authServer)
  if (
      authUrl.hostname.includes('cloud-nine-wallet') || 
      authUrl.hostname.includes('happy-life-bank')
  ){
      const port = authUrl.hostname.includes('cloud-nine-wallet')? authUrl.port: Number(authUrl.port) + 1000
      bru.setEnvVar("senderOpenPaymentsAuthHost", authUrl.protocol + '//localhost:' + port );
  } else {
      bru.setEnvVar("senderOpenPaymentsAuthHost", body?.authServer);
  }
  
  
  
}

tests {
  test("Status code is 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
}
