meta {
  name: Create Outgoing Payment
  type: graphql
  seq: 31
}

post {
  url: {{RafikiGraphqlHost}}/graphql
  body: graphql
  auth: none
}

body:graphql {
  mutation CreateOutgoingPayment($input: CreateOutgoingPaymentInput!) {
    createOutgoingPayment(input: $input) {
      code
      message
      payment {
        createdAt
        error
        metadata
        id
        walletAddressId
        quote {
          createdAt
          expiresAt
          highEstimatedExchangeRate
          id
          lowEstimatedExchangeRate
          maxPacketAmount
          minExchangeRate
          walletAddressId
          receiveAmount {
            assetCode
            assetScale
            value
          }
          receiver
          debitAmount {
            assetCode
            assetScale
            value
          }
        }
        receiveAmount {
          assetCode
          assetScale
          value
        }
        receiver
        debitAmount {
          assetCode
          assetScale
          value
        }
        sentAmount {
          assetCode
          assetScale
          value
        }
        state
        stateAttempts
      }
      success
    }
  }
}

body:graphql:vars {
  {
    "input": {
      "metadata": {
          "description": null,
          "externalRef": null
      },
      "walletAddressId": "{{secondWalletAddressId}}",
      "quoteId": "{{quoteId}}"
    }
  }
}

tests {
  // const body = pm.response.json();
  // 
  // pm.environment.set("outgoingPaymentId", body.data.createOutgoingPayment.payment.id);
  // pm.expect(pm.environment.get("outgoingPaymentId")).to.be.a('string');
}
